generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id               String                 @id @default(uuid())
  slug             String                 @unique
  title            String
  mainImage        String
  price            Int                    @default(0)
  rating           Int                    @default(0)
  description      String
  manufacturer     String
  inStock          Int                    @default(1)
  categoryId       String
  category         Category               @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  userInteractions UserInteraction[]
  Wishlist         Wishlist[]
  customerOrders   CustomerOrderProduct[]
  images           Image[]
}

model UserInteraction {
  id              String   @id @default(uuid())
  userId          String
  productId       String
  interactionType String
  createdAt       DateTime @default(now())
  product         Product  @relation(fields: [productId], references: [id])
  user            User     @relation(fields: [userId], references: [id])
}

model Image {
  imageID   String  @id @default(uuid())
  productID String
  image     String
  product   Product @relation(fields: [productID], references: [id], onDelete: Cascade)
}

model User {
  id               String            @id @default(uuid())
  email            String            @unique
  password         String?
  role             String?           @default("user")
  userInteractions UserInteraction[]
  Wishlist         Wishlist[]
}

model Admin {
  id       String  @id @default(uuid())
  email    String  @unique
  password String?
  role     String? @default("admin")
}

model CustomerOrder {
  id          String                 @id @default(uuid())
  name        String
  lastname    String
  phone       String
  email       String
  company     String
  adress      String
  apartment   String
  postalCode  String
  dateTime    DateTime?              @default(now())
  status      String
  city        String
  country     String
  orderNotice String?
  total       Int
  products    CustomerOrderProduct[]
}

model CustomerOrderProduct {
  id              String         @id @default(uuid())
  customerOrderId String
  productId       String
  quantity        Int
  customerOrder   CustomerOrder  @relation(fields: [customerOrderId], references: [id])
  product         Product        @relation(fields: [productId], references: [id])
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model Wishlist {
  id        String  @id @default(uuid())
  productId String
  userId    String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
